                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3   org 0000H
0000 02019D       4            ljmp myprogram
0003              5            
000B              6   org 000BH
000B 020039       7            ljmp ISR_timer0
000E              8            
001B              9   org 001BH
001B 0200DF      10            ljmp ISR_timer1
001E             11   
002B             12   org 002BH
002B 020169      13            ljmp ISR_timer2
002E             14            
0000             15   BSEG
0000             16   meridian:     dbit 1
0001             17   meridianAlarm: dbit 1
0002             18   
0030             19   DSEG at 30H
0030             20   count10ms: ds 1
0031             21   wait50ms:  ds 1
0032             22   notes:      ds 1
0033             23   seconds:   ds 1
0034             24   minutes:   ds 1
0035             25   hours:     ds 1
0036             26   secAlarm:  ds 1
0037             27   minAlarm:  ds 1
0038             28   hourAlarm: ds 1
0039             29   
002E             30   CSEG
002E             31   
002E             32   ; Look-up table for 7-segment displays
002E             33   myLUT:
002E C0F9A4B0    34       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0033 9282F880    35       DB 092H, 082H, 0F8H, 080H, 090H
     90
0038 FF          36       DB 0FFH ; All segments off
0039             37   
0039             38   CLK           EQU 33333333
0039             39   FREQ           EQU 100
0039             40   B_FREQ              EQU 2000
0039             41   TIMER0_RELOAD  EQU 65536-(CLK/(12*FREQ))
0039             42   TIMER2_RELOAD  EQU 65536-(CLK/(12*2*B_FREQ))
0039             43   NOTE_D6  EQU 64354
0039             44   NOTE_D6S EQU 64420
0039             45   NOTE_F6  EQU 64542
0039             46   NOTE_G6  EQU 64650
0039             47   
0039             48   ISR_Timer0:
0039             49            ; Reload the timer
0039 758C93      50       mov TH0, #high(TIMER0_RELOAD)
003C 758A7F      51       mov TL0, #low(TIMER0_RELOAD)
003F             52       
003F             53       ; Save used register into the stack
003F C0D0        54       push psw
0041 C0E0        55       push acc
0043 C083        56       push dph
0045 C082        57       push dpl
0047             58       
0047 B281        59       cpl P0.1
0049             60       
0049 20E84F      61       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
004C 20E94C      62       jb SWA.1, ISR_Timer0_L0 ; Setting up alarm. Ain't gon' increment shit
004F             63       
004F             64       ;Check if clock time matches alarm time
004F             65       ;lcall AlarmCheck
004F             66       
004F             67       ; Increment the counter and check if a second has passed
004F 0531        68       inc wait50ms
0051 E531        69       mov a, wait50ms
0053 B4140F      70       cjne A, #20, continueClock
0056 753100      71       mov wait50ms, #0
0059             72       
0059 E532        73       mov a, notes
005B 2401        74       add a, #1
005D F532        75       mov notes, a
005F B41A03      76       cjne A, #26, continueClock
0062 753200      77       mov notes, #0
0065             78       
0065             79   continueClock:
0065 0530        80       inc count10ms
0067 E530        81       mov a, count10ms
0069 B4642F      82       cjne A, #100, ISR_Timer0_L0
006C 753000      83       mov count10ms, #0
006F             84       
006F E533        85       mov a, seconds
0071 2401        86       add a, #1
0073 D4          87       da a
0074 F533        88       mov seconds, a
0076 B46022      89       cjne A, #60H, ISR_Timer0_L0
0079 753300      90       mov seconds, #0
007C             91            
007C E534        92       mov a, minutes
007E 2401        93       add a, #1
0080 D4          94       da a
0081 F534        95       mov minutes, a
0083 B46015      96       cjne A, #60H, ISR_Timer0_L0
0086 753400      97       mov minutes, #0
0089             98            
0089 E535        99       mov a, hours
008B 2401       100       add a, #1
008D D4         101       da a
008E F535       102       mov hours, a
0090 B41202     103       cjne A, #12H, NoMeridianChange1
0093 B200       104       cpl meridian
0095            105   NoMeridianChange1:
0095 B41303     106       cjne A, #13H, ISR_Timer0_L0
0098 753501     107       mov hours, #1
009B            108       
009B            109   ISR_Timer0_L0:
009B            110            ; Update the display.  This happens every 10 ms
009B 90002E     111            mov dptr, #myLUT
009E            112            
009E 120262     113            lcall displayMeridian
00A1            114            
00A1 E533       115            mov a, seconds
00A3 540F       116            anl a, #0fH
00A5 93         117            movc a, @a+dptr
00A6 F593       118            mov HEX2, a
00A8 E533       119            mov a, seconds
00AA C4         120            swap a
00AB 540F       121            anl a, #0fH
00AD 93         122            movc a, @a+dptr
00AE F594       123            mov HEX3, a
00B0            124            
00B0 E534       125            mov a, minutes
00B2 540F       126            anl a, #0fH
00B4 93         127            movc a, @a+dptr
00B5 F58E       128            mov HEX4, a
00B7 E534       129            mov a, minutes
00B9 C4         130            swap a
00BA 540F       131            anl a, #0fH
00BC 93         132            movc a, @a+dptr
00BD F58F       133            mov HEX5, a
00BF            134   
00BF E535       135            mov a, hours
00C1 540F       136            anl a, #0fH
00C3 93         137            movc a, @a+dptr
00C4 F596       138            mov HEX6, a
00C6 E535       139            mov a, hours
00C8 20E402     140            jb acc.4, ISR_Timer0_L1
00CB 74A0       141            mov a, #0A0H
00CD            142   ISR_Timer0_L1:
00CD C4         143            swap a
00CE 540F       144            anl a, #0fH
00D0 93         145            movc a, @a+dptr
00D1 F597       146            mov HEX7, a
00D3            147            
00D3 12033E     148            lcall loadSymphony5
00D6            149            ; Restore used registers
00D6 D082       150            pop dpl
00D8 D083       151            pop dph
00DA D0E0       152            pop acc
00DC D0D0       153            pop psw    
00DE 32         154            reti
00DF            155   
00DF            156   ISR_Timer1:
00DF            157            ; Reload the timer
00DF E534       158       mov a, minutes
00E1 2401       159       add a, #1
00E3 D4         160       da a
00E4 758D93     161       mov TH1, #high(TIMER0_RELOAD)
00E7 758B7F     162       mov TL1, #low(TIMER0_RELOAD)
00EA            163       
00EA            164       ; Save used register into the stack
00EA C0D0       165       push psw
00EC C0E0       166       push acc
00EE C083       167       push dph
00F0 C082       168       push dpl
00F2            169   
00F2            170       ; Increment the counter and check if a second has passed
00F2 0530       171       inc count10ms
00F4 E530       172       mov a, count10ms
00F6 B4642F     173       cjne A, #100, ISR_Timer1_L0
00F9 753000     174       mov count10ms, #0
00FC            175       
00FC E533       176       mov a, seconds
00FE 2401       177       add a, #1
0100 D4         178       da a
0101 F533       179       mov seconds, a
0103 B46022     180       cjne A, #60H, ISR_Timer1_L0
0106 753300     181       mov seconds, #0
0109            182   
0109 E534       183       mov a, minutes
010B 2401       184       add a, #1
010D D4         185       da a
010E F534       186       mov minutes, a
0110 B46015     187       cjne A, #60H, ISR_Timer1_L0
0113 753400     188       mov minutes, #0
0116            189   
0116 E535       190       mov a, hours
0118 2401       191       add a, #1
011A D4         192       da a
011B F535       193       mov hours, a
011D B41202     194       cjne A, #12H, NoMeridianChange2
0120 B200       195       cpl meridian
0122            196   NoMeridianChange2:
0122 B41303     197       cjne A, #13H, ISR_Timer1_L0
0125 753501     198       mov hours, #1
0128            199    
0128            200   ISR_Timer1_L0:
0128            201            ; Update the display.  This happens every 10 ms
0128 90002E     202            mov dptr, #myLUT
012B            203            
012B 12026D     204            lcall displayMeridianAlarm
012E            205            
012E E536       206            mov a, secAlarm
0130 540F       207            anl a, #0fH
0132 93         208            movc a, @a+dptr
0133 F593       209            mov HEX2, a
0135 E536       210            mov a, secAlarm
0137 C4         211            swap a
0138 540F       212            anl a, #0fH
013A 93         213            movc a, @a+dptr
013B F594       214            mov HEX3, a
013D            215            
013D E537       216            mov a, minAlarm
013F 540F       217            anl a, #0fH
0141 93         218            movc a, @a+dptr
0142 F58E       219            mov HEX4, a
0144 E537       220            mov a, minAlarm
0146 C4         221            swap a
0147 540F       222            anl a, #0fH
0149 93         223            movc a, @a+dptr
014A F58F       224            mov HEX5, a
014C            225            
014C E538       226            mov a, hourAlarm
014E 540F       227            anl a, #0fH
0150 93         228            movc a, @a+dptr
0151 F596       229            mov HEX6, a
0153 E538       230            mov a, hourAlarm
0155 20E402     231            jb acc.4, ISR_Timer1_L1
0158 74A0       232            mov a, #0A0H
015A            233   ISR_Timer1_L1:
015A C4         234            swap a
015B 540F       235            anl a, #0fH
015D 93         236            movc a, @a+dptr
015E F597       237            mov HEX7, a
0160            238   
0160            239            ; Restore used registers
0160 D082       240            pop dpl
0162 D083       241            pop dph
0164 D0E0       242            pop acc
0166 D0D0       243            pop psw    
0168 32         244            reti
0169            245   
0169            246   ISR_timer2:
0169 C2CF       247            clr TF2
016B B280       248            cpl P0.0
016D 32         249            reti 
016E            250            
016E            251   Init_Timers:
016E            252            ;Timer 0        
016E 758911     253            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
0171 C28C       254            clr TR0 ; Disable timer 0
0173 C28D       255            clr TF0
0175 758C93     256       mov TH0, #high(TIMER0_RELOAD)
0178 758A7F     257       mov TL0, #low(TIMER0_RELOAD)
017B D28C       258       setb TR0 ; Enable timer 0
017D D2A9       259       setb ET0 ; Enable timer 0 interrupt
017F            260       
017F            261       ;Timer 1
017F C28E       262       clr TR1 ; Disable timer 1
0181 C28F       263            clr TF1
0183 758D93     264       mov TH1, #high(TIMER0_RELOAD)
0186 758B7F     265       mov TL1, #low(TIMER0_RELOAD)
0189 D2AB       266       setb ET1 ; Enable timer 1 interrupt
018B            267       
018B D2BD       268       setb PT2
018D 75C800     269       mov T2CON, #00H ; Autoreload is enabled, work as a timer
0190 C2CA       270       clr TR2
0192 C2CF       271       clr TF2
0194            272       ; Set up timer 2 to interrupt every 10ms
0194 75CBFD     273       mov RCAP2H,#high(TIMER2_RELOAD)
0197 75CA4A     274       mov RCAP2L,#low(TIMER2_RELOAD)
019A D2AD       275       setb ET2
019C 22         276       ret
019D            277   
019D            278   myprogram:
019D 75817F     279            mov SP, #7FH
01A0 75E800     280            mov LEDRA,#0
01A3 759500     281            mov LEDRB,#0
01A6 759E00     282            mov LEDRC,#0
01A9 75F800     283            mov LEDG,#0
01AC 759A03     284            mov P0MOD, #00000011B
01AF D280       285            setb P0.0
01B1            286            
01B1 753300     287            mov seconds, #00H
01B4 753400     288            mov minutes, #00H
01B7 753508     289            mov hours, #08H
01BA C200       290            clr     meridian
01BC            291            
01BC 753600     292            mov secAlarm, #00H
01BF 753700     293            mov minAlarm, #00H
01C2 753808     294            mov hourAlarm, #08H
01C5 C201       295            clr     meridianAlarm   
01C7            296   
01C7 12016E     297            lcall Init_Timers
01CA D2AF       298       setb EA  ; Enable all interrupts
01CC            299   
01CC            300   Choice:
01CC 120284     301            lcall alarmCheck
01CF 20E805     302            jb SWA.0, M0
01D2 20E946     303            jb SWA.1, Alarm
01D5 80F5       304            sjmp Choice
01D7            305            
01D7            306   ; Setting the clock      
01D7            307   M0:      
01D7 20FB15     308            jb KEY.3, M1
01DA 30FBFD     309       jnb KEY.3, $
01DD E535       310       mov a, hours
01DF 2401       311            add a, #1
01E1 D4         312            da a
01E2 F535       313            mov hours, a
01E4 B41202     314            cjne A, #12H, NoMeridianChange3
01E7 B200       315       cpl meridian
01E9            316   NoMeridianChange3:
01E9 B41303     317       cjne A, #13H, M1
01EC 753501     318       mov hours, #1
01EF            319   
01EF            320   M1:      
01EF 20FA10     321            jb KEY.2, M2
01F2 30FAFD     322       jnb KEY.2, $
01F5 E534       323       mov a, minutes
01F7 2401       324            add a, #1
01F9 D4         325            da a
01FA F534       326            mov minutes, a
01FC B46003     327       cjne A, #60H, M2
01FF 753400     328       mov minutes, #0
0202            329   
0202            330   M2:      
0202 20F910     331            jb KEY.1, M3
0205 30F9FD     332            jnb KEY.1, $
0208 E533       333            mov a, seconds
020A 2401       334            add a, #1
020C D4         335            da a
020D F533       336            mov seconds, a
020F B46003     337       cjne A, #60H, M3
0212 753300     338       mov seconds, #0
0215            339   
0215            340   M3:      
0215 30E8B4     341            jnb SWA.0, Choice
0218 0201D7     342            ljmp M0
021B            343   
021B            344   ; Alarm mode
021B            345            
021B            346   Alarm:
021B 120278     347            lcall setAlarmTime
021E            348   N0:
021E 20FB15     349            jb KEY.3, N1
0221 30FBFD     350       jnb KEY.3, $
0224 E538       351       mov a, hourAlarm
0226 2401       352            add a, #1
0228 D4         353            da a
0229 F538       354            mov hourAlarm, a
022B B41202     355            cjne A, #12H, NoMeridianChange4
022E B201       356       cpl meridianAlarm
0230            357   NoMeridianChange4:
0230 B41303     358       cjne A, #13H, N1
0233 753801     359       mov hourAlarm, #1
0236            360   
0236            361   N1:      
0236 20FA10     362            jb KEY.2, N2
0239 30FAFD     363       jnb KEY.2, $
023C E537       364       mov a, minAlarm
023E 2401       365            add a, #1
0240 D4         366            da a
0241 F537       367            mov minAlarm, a
0243 B46003     368       cjne A, #60H, N2
0246 753700     369       mov minAlarm, #0
0249            370   
0249            371   N2:      
0249 20F910     372            jb KEY.1, N3
024C 30F9FD     373            jnb KEY.1, $
024F E536       374            mov a, secAlarm
0251 2401       375            add a, #1
0253 D4         376            da a
0254 F536       377            mov secAlarm, a
0256 B46003     378       cjne A, #60H, N3
0259 753600     379       mov secAlarm, #0
025C            380   
025C            381   N3:      
025C 30E91E     382            jnb SWA.1, restoreTime
025F 02021E     383            ljmp N0
0262            384   
0262            385   displayMeridian:
0262 200004     386            jb meridian, night
0265 759108     387            mov HEX0, #08H
0268 22         388            ret
0269            389   night:
0269 75918C     390            mov HEX0, #8CH
026C 22         391            ret
026D            392   
026D            393   displayMeridianAlarm:
026D 200104     394            jb meridianAlarm, night2
0270 759108     395            mov HEX0, #08H
0273 22         396            ret
0274            397   night2:
0274 75918C     398            mov HEX0, #8CH
0277 22         399            ret
0278            400            
0278            401   setAlarmTime:
0278 C28C       402            clr TR0
027A D28E       403            setb TR1
027C 22         404            ret
027D            405            
027D            406   restoreTime:
027D C28E       407            clr TR1
027F D28C       408            setb TR0
0281 0201CC     409            ljmp Choice
0284            410            
0284            411   alarmCheck:
0284 C3         412       clr c
0285 E500       413            mov a, meridian
0287 9501       414            subb a, meridianAlarm
0289 6001       415            jz hourCheck
028B 22         416            ret
028C            417   hourCheck:
028C C3         418            clr c
028D E535       419            mov a, hours
028F 9538       420            subb a, hourAlarm
0291 6001       421            jz minCheck
0293 22         422            ret
0294            423   minCheck:
0294 C3         424            clr c
0295 E534       425            mov a, minutes
0297 9537       426            subb a, minAlarm
0299 6001       427            jz secCheck
029B 22         428            ret
029C            429   secCheck:
029C C3         430            clr c
029D E533       431            mov a, seconds
029F 9536       432            subb a, secAlarm
02A1 6001       433            jz alarmSetCheck
02A3 22         434            ret
02A4            435   alarmSetCheck:
02A4 20EA01     436            jb SWA.2, triggerAlarm
02A7 22         437            ret
02A8            438   triggerAlarm:
02A8 753200     439            mov notes, #0
02AB 753100     440            mov wait50ms, #0
02AE D2CA       441            setb TR2
02B0            442   waitForButton:
02B0 1202BC     443            lcall lightDance
02B3 20FBFA     444            jb KEY.3, waitForButton
02B6 30FBFD     445            jnb KEY.3, $
02B9 C2CA       446            clr TR2
02BB 22         447            ret
02BC            448   
02BC            449   lightDance:
02BC 75E800     450            mov LEDRA, #0
02BF 759500     451            mov LEDRB, #0
02C2 759E00     452            mov LEDRC, #0
02C5 120441     453            lcall wait
02C8 75E801     454            mov LEDRA, #00000001B
02CB 120441     455            lcall wait
02CE 75E802     456            mov LEDRA, #00000010B
02D1 120441     457            lcall wait
02D4 75E804     458            mov LEDRA, #00000100B
02D7 120441     459            lcall wait
02DA 75E808     460            mov LEDRA, #00001000B
02DD 120441     461            lcall wait
02E0 75E810     462            mov LEDRA, #00010000B
02E3 120441     463            lcall wait
02E6 75E820     464            mov LEDRA, #00100000B
02E9 120441     465            lcall wait
02EC 75E840     466            mov LEDRA, #01000000B
02EF 120441     467            lcall wait
02F2 75E880     468            mov LEDRA, #10000000B
02F5 120441     469            lcall wait
02F8 75E800     470            mov LEDRA, #0
02FB 759501     471            mov LEDRB, #00000001B
02FE 120441     472            lcall wait
0301 759502     473            mov LEDRB, #00000010B
0304 120441     474            lcall wait
0307 759504     475            mov LEDRB, #00000100B
030A 120441     476            lcall wait
030D 759508     477            mov LEDRB, #00001000B
0310 120441     478            lcall wait
0313 759510     479            mov LEDRB, #00010000B
0316 120441     480            lcall wait
0319 759520     481            mov LEDRB, #00100000B
031C 120441     482            lcall wait
031F 759540     483            mov LEDRB, #01000000B
0322 120441     484            lcall wait
0325 759580     485            mov LEDRB, #10000000B
0328 120441     486            lcall wait
032B 759500     487            mov LEDRB, #0
032E 759E01     488            mov LEDRC, #1
0331 120441     489            lcall wait
0334 759E02     490            mov LEDRC, #2
0337 120441     491            lcall wait
033A 759E00     492            mov LEDRC, #0
033D 22         493            ret
033E            494   
033E            495   loadSymphony5:
033E E532       496            mov a, notes
0340 B40007     497            cjne a, #0, C_1
0343 75CBFC     498            mov RCAP2H,#high(NOTE_G6)
0346 75CA8A     499       mov RCAP2L,#low(NOTE_G6)
0349 22         500       ret 
034A            501   C_1:
034A B40107     502            cjne a, #1, C_2
034D 75CBFC     503            mov RCAP2H,#high(NOTE_G6)
0350 75CA8A     504       mov RCAP2L,#low(NOTE_G6)
0353 22         505       ret 
0354            506   C_2:
0354 B40207     507            cjne a, #2, C_3
0357 75CB00     508            mov RCAP2H,#0
035A 75CA00     509       mov RCAP2L,#0
035D 22         510       ret 
035E            511   C_3:
035E B40307     512            cjne a, #3, C_4
0361 75CBFC     513            mov RCAP2H,#high(NOTE_G6)
0364 75CA8A     514       mov RCAP2L,#low(NOTE_G6)
0367 22         515       ret   
0368            516   C_4:
0368 B40407     517            cjne a, #4, C_5
036B 75CBFC     518            mov RCAP2H,#high(NOTE_G6)
036E 75CA8A     519       mov RCAP2L,#low(NOTE_G6)
0371 22         520       ret   
0372            521   C_5:
0372 B40507     522            cjne a, #5, C_6
0375 75CB00     523            mov RCAP2H,#0
0378 75CA00     524       mov RCAP2L,#0
037B 22         525       ret 
037C            526   C_6:
037C B40607     527            cjne a, #6, C_7
037F 75CBFC     528            mov RCAP2H,#high(NOTE_G6)
0382 75CA8A     529       mov RCAP2L,#low(NOTE_G6)
0385 22         530       ret   
0386            531   C_7:
0386 B40707     532            cjne a, #7, C_8
0389 75CBFC     533            mov RCAP2H,#high(NOTE_G6)
038C 75CA8A     534       mov RCAP2L,#low(NOTE_G6)
038F 22         535       ret   
0390            536   C_8:
0390 B40807     537            cjne a, #8, C_9
0393 75CB00     538            mov RCAP2H,#0
0396 75CA00     539       mov RCAP2L,#0
0399 22         540            ret
039A            541   C_9:
039A B40907     542            cjne a, #9, C_10
039D 75CBFB     543            mov RCAP2H,#high(NOTE_D6S)
03A0 75CAA4     544       mov RCAP2L,#low(NOTE_D6S)
03A3 22         545       ret          
03A4            546   C_10:
03A4 B40A07     547            cjne a, #10, C_11
03A7 75CBFB     548            mov RCAP2H,#high(NOTE_D6S)
03AA 75CAA4     549       mov RCAP2L,#low(NOTE_D6S)
03AD 22         550            ret
03AE            551   C_11:
03AE B40B07     552            cjne a, #11, C_12
03B1 75CBFB     553            mov RCAP2H,#high(NOTE_D6S)
03B4 75CAA4     554       mov RCAP2L,#low(NOTE_D6S)
03B7 22         555       ret          
03B8            556   C_12:
03B8 B40C07     557            cjne a, #12, C_13
03BB 75CB00     558            mov RCAP2H,#0
03BE 75CA00     559       mov RCAP2L,#0        
03C1 22         560            ret
03C2            561   C_13:
03C2 B40D07     562            cjne a, #13, C_14
03C5 75CBFC     563            mov RCAP2H,#high(NOTE_F6)
03C8 75CA1E     564       mov RCAP2L,#low(NOTE_F6)
03CB 22         565       ret 
03CC            566   C_14:
03CC B40E07     567            cjne a, #14, C_15
03CF 75CBFC     568            mov RCAP2H,#high(NOTE_F6)
03D2 75CA1E     569       mov RCAP2L,#low(NOTE_F6)
03D5 22         570       ret 
03D6            571   C_15:
03D6 B40F07     572            cjne a, #15, C_16
03D9 75CB00     573            mov RCAP2H,#0
03DC 75CA00     574       mov RCAP2L,#0
03DF 22         575       ret 
03E0            576   C_16:
03E0 B41007     577            cjne a, #16, C_17
03E3 75CBFC     578            mov RCAP2H,#high(NOTE_F6)
03E6 75CA1E     579       mov RCAP2L,#low(NOTE_F6)
03E9 22         580       ret   
03EA            581   C_17:
03EA B41107     582            cjne a, #17, C_18
03ED 75CBFC     583            mov RCAP2H,#high(NOTE_F6)
03F0 75CA1E     584       mov RCAP2L,#low(NOTE_F6)
03F3 22         585       ret   
03F4            586   C_18:
03F4 B41207     587            cjne a, #18, C_19
03F7 75CB00     588            mov RCAP2H,#0
03FA 75CA00     589       mov RCAP2L,#0
03FD 22         590       ret 
03FE            591   C_19:
03FE B41307     592            cjne a, #19, C_20
0401 75CBFC     593            mov RCAP2H,#high(NOTE_F6)
0404 75CA1E     594       mov RCAP2L,#low(NOTE_F6)
0407 22         595       ret   
0408            596   C_20:
0408 B41407     597            cjne a, #20, C_21
040B 75CBFC     598            mov RCAP2H,#high(NOTE_F6)
040E 75CA1E     599       mov RCAP2L,#low(NOTE_F6)
0411 22         600       ret   
0412            601   C_21:
0412 B41507     602            cjne a, #21, C_22
0415 75CB00     603            mov RCAP2H,#0
0418 75CA00     604       mov RCAP2L,#0
041B 22         605            ret
041C            606   C_22:
041C B41607     607            cjne a, #22, C_23
041F 75CBFB     608            mov RCAP2H,#high(NOTE_D6)
0422 75CA62     609       mov RCAP2L,#low(NOTE_D6)
0425 22         610       ret          
0426            611   C_23:
0426 B41707     612            cjne a, #23, C_24
0429 75CBFB     613            mov RCAP2H,#high(NOTE_D6)
042C 75CA62     614       mov RCAP2L,#low(NOTE_D6)
042F 22         615            ret
0430            616   C_24:
0430 B41807     617            cjne a, #24, C_25
0433 75CBFB     618            mov RCAP2H,#high(NOTE_D6)
0436 75CA62     619       mov RCAP2L,#low(NOTE_D6)
0439 22         620       ret
043A            621   C_25:
043A 75CB00     622            mov RCAP2H,#0
043D 75CA00     623       mov RCAP2L,#0
0440 22         624       ret                 
0441            625       
0441            626   wait:
0441 7A02       627            mov R2, #2
0443 79FA       628   W3: mov R1, #250
0445 78FA       629   W2: mov R0, #250
0447 D8FE       630   W1: djnz R0, W1
0449 D9FA       631            djnz R1, W2
044B DAF6       632            djnz R2, W3
044D 22         633            ret     
044E            634   END
