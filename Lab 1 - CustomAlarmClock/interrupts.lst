                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3   org 0000H
0000 02037D       4            ljmp myprogram
0003              5            
000B              6   org 000BH
000B 020219       7            ljmp ISR_timer0
000E              8            
001B              9   org 001BH
001B 0202BF      10            ljmp ISR_timer1
001E             11   
002B             12   org 002BH
002B 020349      13            ljmp ISR_timer2
002E             14            
0000             15   BSEG
0000             16   meridian:      dbit 1
0001             17   meridianAlarm: dbit 1
0002             18   
0030             19   DSEG at 30H
0030             20   count10ms: ds 1
0031             21   wait200ms: ds 1
0032             22   notes:      ds 1
0033             23   seconds:   ds 1
0034             24   minutes:   ds 1
0035             25   hours:     ds 1
0036             26   secAlarm:  ds 1
0037             27   minAlarm:  ds 1
0038             28   hourAlarm: ds 1
0039             29   
002E             30   CSEG
002E             31   
                 -1   $include (functionsAndFeatures.asm)
020E             33   ; Look-up table for 7-segment displays
020E             34   myLUT:
020E C0F9A4B0    35       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0213 9282F880    36       DB 092H, 082H, 0F8H, 080H, 090H
     90
0218 FF          37       DB 0FFH ; All segments off
0219             38   
0219             39   CLK           EQU 33333333
0219             40   FREQ           EQU 100
0219             41   B_FREQ              EQU 2000
0219             42   TIMER0_RELOAD  EQU 65536-(CLK/(12*FREQ))
0219             43   TIMER2_RELOAD  EQU 65536-(CLK/(12*2*B_FREQ))
0219             44   NOTE_A5  EQU 63958
0219             45   NOTE_B5  EQU 64130
0219             46   NOTE_C6  EQU 64209
0219             47   NOTE_D6  EQU 64354
0219             48   NOTE_D6S EQU 64420
0219             49   NOTE_E6  EQU 64483
0219             50   NOTE_F6  EQU 64542
0219             51   NOTE_G6  EQU 64650
0219             52   NOTE_A6  EQU 64747
0219             53   NOTE_B6  EQU 64833
0219             54   NOTE_C7  EQU 64872
0219             55   
0219             56   
0219             57   ISR_Timer0:
0219             58            ; Reload the timer
0219 758C93      59       mov TH0, #high(TIMER0_RELOAD)
021C 758A7F      60       mov TL0, #low(TIMER0_RELOAD)
021F             61       
021F             62       ; Save used register into the stack
021F C0D0        63       push psw
0221 C0E0        64       push acc
0223 C083        65       push dph
0225 C082        66       push dpl
0227             67       
0227 B281        68       cpl P0.1
0229             69       
0229 20E84F      70       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
022C 20E94C      71       jb SWA.1, ISR_Timer0_L0 ; Setting up alarm. Ain't gon' increment shit
022F             72       
022F             73       ;Check if clock time matches alarm time
022F             74       ;lcall AlarmCheck
022F             75       
022F             76       ; Increment the counter and check if a second has passed
022F 0531        77       inc wait200ms
0231 E531        78       mov a, wait200ms
0233 B4100F      79       cjne A, #16, continueClock
0236 753100      80       mov wait200ms, #0
0239             81       
0239 E532        82       mov a, notes
023B 2401        83       add a, #1
023D F532        84       mov notes, a
023F B41A03      85       cjne A, #26, continueClock
0242 753200      86       mov notes, #0
0245             87       
0245             88   continueClock:
0245 0530        89       inc count10ms
0247 E530        90       mov a, count10ms
0249 B4642F      91       cjne A, #100, ISR_Timer0_L0
024C 753000      92       mov count10ms, #0
024F             93   
024F E533        94       mov a, seconds
0251 2401        95       add a, #1
0253 D4          96       da a
0254 F533        97       mov seconds, a
0256 B46022      98       cjne A, #60H, ISR_Timer0_L0
0259 753300      99       mov seconds, #0
025C            100            
025C E534       101       mov a, minutes
025E 2401       102       add a, #1
0260 D4         103       da a
0261 F534       104       mov minutes, a
0263 B46015     105       cjne A, #60H, ISR_Timer0_L0
0266 753400     106       mov minutes, #0
0269            107            
0269 E535       108       mov a, hours
026B 2401       109       add a, #1
026D D4         110       da a
026E F535       111       mov hours, a
0270 B41202     112       cjne A, #12H, NoMeridianChange1
0273 B200       113       cpl meridian
0275            114   NoMeridianChange1:
0275 B41303     115       cjne A, #13H, ISR_Timer0_L0
0278 753501     116       mov hours, #1
027B            117       
027B            118   ISR_Timer0_L0:
027B            119            ; Update the display.  This happens every 10 ms
027B 90020E     120            mov dptr, #myLUT
027E            121            
027E 1200B0     122            lcall displayMeridian
0281            123            
0281 E533       124            mov a, seconds
0283 540F       125            anl a, #0fH
0285 93         126            movc a, @a+dptr
0286 F593       127            mov HEX2, a
0288 E533       128            mov a, seconds
028A C4         129            swap a
028B 540F       130            anl a, #0fH
028D 93         131            movc a, @a+dptr
028E F594       132            mov HEX3, a
0290            133            
0290 E534       134            mov a, minutes
0292 540F       135            anl a, #0fH
0294 93         136            movc a, @a+dptr
0295 F58E       137            mov HEX4, a
0297 E534       138            mov a, minutes
0299 C4         139            swap a
029A 540F       140            anl a, #0fH
029C 93         141            movc a, @a+dptr
029D F58F       142            mov HEX5, a
029F            143   
029F E535       144            mov a, hours
02A1 540F       145            anl a, #0fH
02A3 93         146            movc a, @a+dptr
02A4 F596       147            mov HEX6, a
02A6 E535       148            mov a, hours
02A8 20E402     149            jb acc.4, ISR_Timer0_L1
02AB 74A0       150            mov a, #0A0H
02AD            151   ISR_Timer0_L1:
02AD C4         152            swap a
02AE 540F       153            anl a, #0fH
02B0 93         154            movc a, @a+dptr
02B1 F597       155            mov HEX7, a
02B3            156            
02B3 1200C6     157            lcall loadSymphony5
02B6            158            ; Restore used registers
02B6 D082       159            pop dpl
02B8 D083       160            pop dph
02BA D0E0       161            pop acc
02BC D0D0       162            pop psw    
02BE 32         163            reti
02BF            164   
02BF            165   ISR_Timer1:
02BF            166            ; Reload the timer
02BF E534       167       mov a, minutes
02C1 2401       168       add a, #1
02C3 D4         169       da a
02C4 758D93     170       mov TH1, #high(TIMER0_RELOAD)
02C7 758B7F     171       mov TL1, #low(TIMER0_RELOAD)
02CA            172       
02CA            173       ; Save used register into the stack
02CA C0D0       174       push psw
02CC C0E0       175       push acc
02CE C083       176       push dph
02D0 C082       177       push dpl
02D2            178   
02D2            179       ; Increment the counter and check if a second has passed
02D2 0530       180       inc count10ms
02D4 E530       181       mov a, count10ms
02D6 B4642F     182       cjne A, #100, ISR_Timer1_L0
02D9 753000     183       mov count10ms, #0
02DC            184       
02DC E533       185       mov a, seconds
02DE 2401       186       add a, #1
02E0 D4         187       da a
02E1 F533       188       mov seconds, a
02E3 B46022     189       cjne A, #60H, ISR_Timer1_L0
02E6 753300     190       mov seconds, #0
02E9            191   
02E9 E534       192       mov a, minutes
02EB 2401       193       add a, #1
02ED D4         194       da a
02EE F534       195       mov minutes, a
02F0 B46015     196       cjne A, #60H, ISR_Timer1_L0
02F3 753400     197       mov minutes, #0
02F6            198   
02F6 E535       199       mov a, hours
02F8 2401       200       add a, #1
02FA D4         201       da a
02FB F535       202       mov hours, a
02FD B41202     203       cjne A, #12H, NoMeridianChange2
0300 B200       204       cpl meridian
0302            205   NoMeridianChange2:
0302 B41303     206       cjne A, #13H, ISR_Timer1_L0
0305 753501     207       mov hours, #1
0308            208    
0308            209   ISR_Timer1_L0:
0308            210            ; Update the display.  This happens every 10 ms
0308 90020E     211            mov dptr, #myLUT
030B            212            
030B 1200BB     213            lcall displayMeridianAlarm
030E            214            
030E E536       215            mov a, secAlarm
0310 540F       216            anl a, #0fH
0312 93         217            movc a, @a+dptr
0313 F593       218            mov HEX2, a
0315 E536       219            mov a, secAlarm
0317 C4         220            swap a
0318 540F       221            anl a, #0fH
031A 93         222            movc a, @a+dptr
031B F594       223            mov HEX3, a
031D            224            
031D E537       225            mov a, minAlarm
031F 540F       226            anl a, #0fH
0321 93         227            movc a, @a+dptr
0322 F58E       228            mov HEX4, a
0324 E537       229            mov a, minAlarm
0326 C4         230            swap a
0327 540F       231            anl a, #0fH
0329 93         232            movc a, @a+dptr
032A F58F       233            mov HEX5, a
032C            234            
032C E538       235            mov a, hourAlarm
032E 540F       236            anl a, #0fH
0330 93         237            movc a, @a+dptr
0331 F596       238            mov HEX6, a
0333 E538       239            mov a, hourAlarm
0335 20E402     240            jb acc.4, ISR_Timer1_L1
0338 74A0       241            mov a, #0A0H
033A            242   ISR_Timer1_L1:
033A C4         243            swap a
033B 540F       244            anl a, #0fH
033D 93         245            movc a, @a+dptr
033E F597       246            mov HEX7, a
0340            247   
0340            248            ; Restore used registers
0340 D082       249            pop dpl
0342 D083       250            pop dph
0344 D0E0       251            pop acc
0346 D0D0       252            pop psw    
0348 32         253            reti
0349            254   
0349            255   ISR_timer2:
0349 C2CF       256            clr TF2
034B B280       257            cpl P0.0
034D 32         258            reti 
034E            259            
034E            260   Init_Timers:
034E            261            ;Timer 0        
034E 758911     262            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
0351 C28C       263            clr TR0 ; Disable timer 0
0353 C28D       264            clr TF0
0355 758C93     265       mov TH0, #high(TIMER0_RELOAD)
0358 758A7F     266       mov TL0, #low(TIMER0_RELOAD)
035B D28C       267       setb TR0 ; Enable timer 0
035D D2A9       268       setb ET0 ; Enable timer 0 interrupt
035F            269       
035F            270       ;Timer 1
035F C28E       271       clr TR1 ; Disable timer 1
0361 C28F       272            clr TF1
0363 758D93     273       mov TH1, #high(TIMER0_RELOAD)
0366 758B7F     274       mov TL1, #low(TIMER0_RELOAD)
0369 D2AB       275       setb ET1 ; Enable timer 1 interrupt
036B            276       
036B D2BD       277       setb PT2
036D 75C800     278       mov T2CON, #00H ; Autoreload is enabled, work as a timer
0370 C2CA       279       clr TR2
0372 C2CF       280       clr TF2
0374            281       ; Set up timer 2 to interrupt every 10ms
0374 75CBFD     282       mov RCAP2H,#high(TIMER2_RELOAD)
0377 75CA4A     283       mov RCAP2L,#low(TIMER2_RELOAD)
037A D2AD       284       setb ET2
037C 22         285       ret
037D            286   
037D            287   myprogram:
037D 75817F     288            mov SP, #7FH
0380 75E800     289            mov LEDRA,#0
0383 759500     290            mov LEDRB,#0
0386 759E00     291            mov LEDRC,#0
0389 75F800     292            mov LEDG,#0
038C 759A03     293            mov P0MOD, #00000011B
038F D280       294            setb P0.0
0391            295            
0391 753300     296            mov seconds, #00H
0394 753400     297            mov minutes, #00H
0397 753508     298            mov hours, #08H
039A C200       299            clr     meridian
039C            300            
039C 753605     301            mov secAlarm, #05H
039F 753700     302            mov minAlarm, #00H
03A2 753808     303            mov hourAlarm, #08H
03A5 C201       304            clr     meridianAlarm
03A7            305            
03A7            306   
03A7 12034E     307            lcall Init_Timers
03AA D2AF       308       setb EA  ; Enable all interrupts
03AC            309   
03AC            310   Choice:
03AC 1201D6     311            lcall alarmCheck
03AF 20E805     312            jb SWA.0, M0
03B2 20E946     313            jb SWA.1, Alarm
03B5 80F5       314            sjmp Choice
03B7            315            
03B7            316   ; Setting the clock      
03B7            317   M0:      
03B7 20FB15     318            jb KEY.3, M1
03BA 30FBFD     319       jnb KEY.3, $
03BD E535       320       mov a, hours
03BF 2401       321            add a, #1
03C1 D4         322            da a
03C2 F535       323            mov hours, a
03C4 B41202     324            cjne A, #12H, NoMeridianChange3
03C7 B200       325       cpl meridian
03C9            326   NoMeridianChange3:
03C9 B41303     327       cjne A, #13H, M1
03CC 753501     328       mov hours, #1
03CF            329   
03CF            330   M1:      
03CF 20FA10     331            jb KEY.2, M2
03D2 30FAFD     332       jnb KEY.2, $
03D5 E534       333       mov a, minutes
03D7 2401       334            add a, #1
03D9 D4         335            da a
03DA F534       336            mov minutes, a
03DC B46003     337       cjne A, #60H, M2
03DF 753400     338       mov minutes, #0
03E2            339   
03E2            340   M2:      
03E2 20F910     341            jb KEY.1, M3
03E5 30F9FD     342            jnb KEY.1, $
03E8 E533       343            mov a, seconds
03EA 2401       344            add a, #1
03EC D4         345            da a
03ED F533       346            mov seconds, a
03EF B46003     347       cjne A, #60H, M3
03F2 753300     348       mov seconds, #0
03F5            349   
03F5            350   M3:      
03F5 30E8B4     351            jnb SWA.0, Choice
03F8 0203B7     352            ljmp M0
03FB            353   
03FB            354   ; Alarm mode
03FB            355            
03FB            356   Alarm:
03FB 120442     357            lcall setAlarmTime
03FE            358   N0:
03FE 20FB15     359            jb KEY.3, N1
0401 30FBFD     360       jnb KEY.3, $
0404 E538       361       mov a, hourAlarm
0406 2401       362            add a, #1
0408 D4         363            da a
0409 F538       364            mov hourAlarm, a
040B B41202     365            cjne A, #12H, NoMeridianChange4
040E B201       366       cpl meridianAlarm
0410            367   NoMeridianChange4:
0410 B41303     368       cjne A, #13H, N1
0413 753801     369       mov hourAlarm, #1
0416            370   
0416            371   N1:      
0416 20FA10     372            jb KEY.2, N2
0419 30FAFD     373       jnb KEY.2, $
041C E537       374       mov a, minAlarm
041E 2401       375            add a, #1
0420 D4         376            da a
0421 F537       377            mov minAlarm, a
0423 B46003     378       cjne A, #60H, N2
0426 753700     379       mov minAlarm, #0
0429            380   
0429            381   N2:      
0429 20F910     382            jb KEY.1, N3
042C 30F9FD     383            jnb KEY.1, $
042F E536       384            mov a, secAlarm
0431 2401       385            add a, #1
0433 D4         386            da a
0434 F536       387            mov secAlarm, a
0436 B46003     388       cjne A, #60H, N3
0439 753600     389       mov secAlarm, #0
043C            390   
043C            391   N3:      
043C 30E908     392            jnb SWA.1, restoreTime
043F 0203FE     393            ljmp N0
0442            394   
0442            395   setAlarmTime:
0442 C28C       396            clr TR0
0444 D28E       397            setb TR1
0446 22         398            ret
0447            399            
0447            400   restoreTime:
0447 C28E       401            clr TR1
0449 D28C       402            setb TR0
044B 0203AC     403            ljmp Choice
044E            404                    
044E            405   END
