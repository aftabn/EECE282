0000              1   ; sqrt16: this calculator reads a 16-bit number and gets it square root
0000              2   
                 -1   $modde2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              4   
0000              5            CSEG at 0
0000 0202B4       6            ljmp MyProgram
0003              7   
0030              8   dseg at 30h
0030              9   x:    ds 2
0032             10   y:    ds 2
0034             11   bcd:  ds 3
0037             12   
0000             13   bseg
0000             14   mf:   dbit 1
0001             15   
0003             16            CSEG
0003             17            
                 -1   $include(math16.asm)
                428   $LIST
01DD             19   
01DD             20   ; Look-up table for 7-seg displays
01DD             21   myLUT:
01DD C0F9A4B0    22       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
01E2 9282F880    23       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
01E7 8883C6A1    24       DB 088H, 083H, 0C6H, 0A1H, 086H, 08EH  ; A to F
     868E
01ED             25   
01ED             26   Display:
01ED 9001DD      27            mov dptr, #myLUT
01F0             28            ; Display Digit 0
01F0 E534        29       mov A, bcd+0
01F2 540F        30       anl a, #0fh
01F4 93          31       movc A, @A+dptr
01F5 F591        32       mov HEX0, A
01F7             33            ; Display Digit 1
01F7 E534        34       mov A, bcd+0
01F9 C4          35       swap a
01FA 540F        36       anl a, #0fh
01FC 93          37       movc A, @A+dptr
01FD F592        38       mov HEX1, A
01FF             39            ; Display Digit 2
01FF E535        40       mov A, bcd+1
0201 540F        41       anl a, #0fh
0203 93          42       movc A, @A+dptr
0204 F593        43       mov HEX2, A
0206             44            ; Display Digit 3
0206 E535        45       mov A, bcd+1
0208 C4          46       swap a
0209 540F        47       anl a, #0fh
020B 93          48       movc A, @A+dptr
020C F594        49       mov HEX3, A
020E             50            ; Display Digit 4
020E E536        51       mov A, bcd+2
0210 540F        52       anl a, #0fh
0212 93          53       movc A, @A+dptr
0213 F58E        54       mov HEX4, A
0215 22          55       ret
0216             56   
0216             57   Shift_Digits:
0216 7804        58            mov R0, #4 ; shift left four bits
0218             59   Shift_Digits_L0:
0218 C3          60            clr c
0219 E534        61            mov a, bcd+0
021B 33          62            rlc a
021C F534        63            mov bcd+0, a
021E E535        64            mov a, bcd+1
0220 33          65            rlc a
0221 F535        66            mov bcd+1, a
0223 E536        67            mov a, bcd+2
0225 33          68            rlc a
0226 F536        69            mov bcd+2, a
0228 D8EE        70            djnz R0, Shift_Digits_L0
022A             71            ; R7 has the new bcd digit      
022A EF          72            mov a, R7
022B 4534        73            orl a, bcd+0
022D F534        74            mov bcd+0, a
022F             75            ; make the four most significant bits of bcd+2 zero
022F E536        76            mov a, bcd+2
0231 540F        77            anl a, #0fH
0233 F536        78            mov bcd+2, a
0235 22          79            ret
0236             80            
0236             81   WaitHalfSec:
0236 7A5A        82            MOV R2, #90
0238 79FA        83   L6:      MOV R1, #250
023A 78FA        84   L5: MOV R0, #250
023C D8FE        85   L4: DJNZ R0, L4 ; 3 machine cycles -> 3*30ns*250=22.5us
023E D9FA        86            DJNZ R1, L5 ; 22.5us*250=5.6235ms
0240 DAF6        87            DJNZ R2, L6 ; 5.625ms*90=0.5s (approximately)
0242 22          88            ret
0243             89            
0243             90   ClearDisplay:
0243 759140      91            MOV 91H, #40H
0246 759240      92            MOV 92H, #40H
0249 759340      93            MOV 93H, #40H
024C 759440      94            MOV 94H, #40H
024F 758E40      95            MOV 8EH, #40H
0252 753400      96            mov bcd+0, #00H
0255 753500      97            mov bcd+1, #00H
0258 753600      98            mov bcd+2, #00H
025B 22          99            ret
025C            100            
025C            101   Wait50ms:
025C            102   ;33.33MHz, 1 clk per cycle: 0.03us
025C 781E       103            mov R0, #30
025E 794A       104   L3: mov R1, #74
0260 7AFA       105   L2: mov R2, #250
0262 DAFE       106   L1: djnz R2, L1 ;3*250*0.03us=22.5us
0264 D9FA       107       djnz R1, L2 ;74*22.5us=1.665ms
0266 D8F6       108       djnz R0, L3 ;1.665ms*30=50ms
0268 22         109       ret
0269            110   
0269            111   ; Check if SW0 to SW15 are toggled up.  Returns the toggled switch in
0269            112   ; R7.  If the carry is not set, no toggling switches were detected.
0269            113   ReadNumber:
0269 ACE8       114            mov r4, SWA ; Read switches 0 to 7
026B AD95       115            mov r5, SWB ; Read switches 8 to 15
026D EC         116            mov a, r4
026E 4D         117            orl a, r5
026F 6029       118            jz ReadNumber_no_number
0271 12025C     119            lcall Wait50ms ; debounce
0274 E5E8       120            mov a, SWA
0276 C3         121            clr c
0277 9C         122            subb a, r4
0278 7020       123            jnz ReadNumber_no_number ; it was a bounce
027A E595       124            mov a, SWB
027C C3         125            clr c
027D 9D         126            subb a, r5
027E 701A       127            jnz ReadNumber_no_number ; it was a bounce
0280 7F10       128            mov r7, #16 ; Loop counter
0282            129   ReadNumber_L0:
0282 C3         130            clr c
0283 EC         131            mov a, r4
0284 33         132            rlc a
0285 FC         133            mov r4, a
0286 ED         134            mov a, r5
0287 33         135            rlc a
0288 FD         136            mov r5, a
0289 4004       137            jc ReadNumber_decode
028B DFF5       138            djnz r7, ReadNumber_L0
028D 800B       139            sjmp ReadNumber_no_number       
028F            140   ReadNumber_decode:
028F 1F         141            dec r7
0290 D3         142            setb c
0291            143   ReadNumber_L1:
0291 E5E8       144            mov a, SWA
0293 70FC       145            jnz ReadNumber_L1
0295            146   ReadNumber_L2:
0295 E595       147            mov a, SWB
0297 70FC       148            jnz ReadNumber_L2
0299 22         149            ret
029A            150   ReadNumber_no_number:
029A C3         151            clr c
029B 22         152            ret
029C            153   
029C            154   wait_for_key1:
029C            155   key1_is_zero:
029C 30F9FD     156            jnb KEY.1, key1_is_zero ; loop while the button is pressed
029F 22         157            ret
02A0            158   
02A0            159   wait_for_key2:
02A0            160   key2_is_zero:
02A0 30FAFD     161            jnb KEY.2, key2_is_zero ; loop while the button is pressed
02A3 22         162            ret
02A4            163            
02A4            164   wait_for_key3:
02A4            165   key3_is_zero:
02A4 30FBFD     166            jnb KEY.3, key3_is_zero ; loop while the button is pressed
02A7 22         167            ret
02A8            168   
02A8            169   wait_for_SW16:
02A8            170   SW16_is_zero:
02A8 E59E       171            mov a, SWC
02AA 20E0FB     172            jb acc.0, SW16_is_zero
02AD 22         173            ret
02AE            174   
02AE            175   wait_for_SW17:
02AE            176   SW17_is_zero:
02AE E59E       177            mov a, SWC
02B0 20E1FB     178            jb acc.1, SW17_is_zero
02B3 22         179            ret
02B4            180   
02B4            181   MyProgram:
02B4 75817F     182            mov SP, #7FH
02B7 E4         183            clr a
02B8 F5E8       184            mov LEDRA, a
02BA F595       185            mov LEDRB, a
02BC F59E       186            mov LEDRC, a
02BE F5F8       187            mov LEDG, a
02C0 F534       188            mov bcd+0, a
02C2 F535       189            mov bcd+1, a
02C4 F536       190            mov bcd+2, a
02C6 1201ED     191            lcall Display
02C9            192            
02C9 759779     193            MOV 97H, #79H
02CC 759600     194            MOV 96H, #00H
02CF 758F12     195            MOV 8FH, #12H
02D2 758E78     196            MOV 8EH, #78H
02D5 759479     197            MOV 94H, #79H
02D8 759379     198            MOV 93H, #79H
02DB 759224     199            MOV 92H, #24H
02DE 759112     200            MOV 91H, #12H
02E1 120236     201            LCALL WaitHalfSec
02E4 120236     202            LCALL WaitHalfSec
02E7 120236     203            LCALL WaitHalfSec
02EA 120236     204            LCALL WaitHalfSec
02ED            205   
02ED 75977F     206            MOV 97H, #7FH
02F0 75967F     207            MOV 96H, #7FH
02F3 758F7F     208            MOV 8FH, #7FH
02F6 758E40     209            MOV 8EH, #40H
02F9 759440     210            MOV 94H, #40H
02FC 759340     211            MOV 93H, #40H
02FF 759240     212            MOV 92H, #40H
0302 759140     213            MOV 91H, #40H
0305            214   
0305            215   FirstOperand:
0305 30FA37     216            jnb KEY.2, Subtraction
0308 30FB52     217            jnb KEY.3, Addition
030B E59E       218            mov a, SWC
030D 20E06C     219            jb acc.0, MidDivision
0310 20E16D     220            jb acc.1, Multiplication
0313            221            
0313 120269     222            lcall ReadNumber
0316 50ED       223            jnc FirstOperand
0318 EF         224            mov a, r7 ; The number returned by 'ReadNumber' above must be < 10
0319 C3         225            clr c
031A 940A       226            subb a, #10
031C 50E7       227            jnc FirstOperand
031E            228            
031E            229            ; The number is less than 10.  Shift bcd one digit left with the new value.
031E 120216     230            lcall Shift_Digits
0321            231            ; Display the new bcd number
0321 1201ED     232            lcall Display
0324            233            
0324 020305     234            ljmp FirstOperand
0327            235   
0327            236   SecondOperand:
0327 120269     237            lcall ReadNumber
032A 50FB       238            jnc SecondOperand
032C EF         239            mov a, r7 ; The number returned by 'ReadNumber' above must be < 10
032D C3         240            clr c
032E 940A       241            subb a, #10
0330 50F5       242            jnc SecondOperand
0332            243            
0332            244            ; The number is less than 10.  Shift bcd one digit left with the new value.
0332 120216     245            lcall Shift_Digits
0335            246            ; Display the new bcd number
0335 1201ED     247            lcall Display
0338            248   
0338 20F9EC     249            jb KEY.1, SecondOperand
033B 30F93A     250            jnb KEY.1, MidEquals
033E 22         251            ret
033F            252            
033F            253   Subtraction:
033F 1202A0     254            lcall wait_for_key2
0342 12004E     255            lcall bcd2hex
0345 120243     256            lcall clearDisplay
0348 1201C9     257            lcall copy_xy
034B 120327     258            lcall SecondOperand
034E 1201D0     259            lcall xchg_xy
0351 1200A0     260            lcall sub16
0354 120003     261            lcall hex2bcd
0357 1201ED     262            lcall Display
035A 020305     263            ljmp FirstOperand
035D            264   
035D            265   Addition:
035D 1202A4     266            lcall wait_for_key3
0360 12004E     267            lcall bcd2hex
0363 120243     268            lcall clearDisplay
0366 1201C9     269            lcall copy_xy
0369 120327     270            lcall SecondOperand
036C 12008B     271            lcall add16
036F 120003     272            lcall hex2bcd
0372 1201ED     273            lcall Display
0375 020305     274            ljmp FirstOperand
0378            275   
0378            276   MidEquals:
0378 1203B9     277            lcall Equals
037B 22         278            ret
037C            279   
037C            280   MidDivision:
037C 12039B     281            lcall Division
037F 22         282            ret
0380            283            
0380            284   Multiplication:
0380 1202AE     285            lcall wait_for_SW17
0383 12004E     286            lcall bcd2hex
0386 120243     287            lcall clearDisplay
0389 1201C9     288            lcall copy_xy
038C 120327     289            lcall SecondOperand
038F 12010C     290            lcall mul16
0392 120003     291            lcall hex2bcd
0395 1201ED     292            lcall Display
0398 020305     293            ljmp FirstOperand
039B            294            
039B            295   Division:
039B 1202A8     296            lcall wait_for_SW16
039E 12004E     297            lcall bcd2hex
03A1 120243     298            lcall clearDisplay
03A4 1201C9     299            lcall copy_xy
03A7 120327     300            lcall SecondOperand
03AA 1201D0     301            lcall xchg_xy
03AD 120188     302            lcall div16
03B0 120003     303            lcall hex2bcd
03B3 1201ED     304            lcall Display
03B6 020305     305            ljmp FirstOperand
03B9            306   
03B9            307   Equals:
03B9 12029C     308            lcall wait_for_key1
03BC 12004E     309            lcall bcd2hex
03BF 120243     310            lcall clearDisplay
03C2 22         311            ret
03C3            312   end
