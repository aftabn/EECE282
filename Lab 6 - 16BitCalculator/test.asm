; mathtest.asm:  Examples using math16.asm routines

$MODDE2
org 0000H
   ljmp MyProgram
   
DB0 EQU P1.0
DB1 EQU P1.1
DB2 EQU P1.2
DB3 EQU P1.3
DB4 EQU P1.4
DB5 EQU P1.5
DB6 EQU P1.6
DB7 EQU P1.7
EN EQU P3.7
RS EQU P3.6
RW EQU P3.5
INFO EQU P1


WAIT_LCD:
	CLR EN ;Start LCD command
	CLR RS ;It's a command
	SETB RW ;It's a read command
	MOV INFO,#0FFh ;Set all pins to FF initially
	SETB EN ;Clock out command to LCD
	MOV A,INFO ;Read the return value
	JB ACC.7,WAIT_LCD ;If bit 7 high, LCD still busy
	CLR EN ;Finish the command
	CLR RW ;Turn off RW for future commands
	RET
	
MyProgram:
	;insert this code somewhere if you want to set cursor position
	;CLR RS
	;MOV DATA,#0CAh
	;SETB EN
	;CLR EN
	;LCALL WAIT_LCD
	MOV P1MOD, #11111111B
 	mov P3MOD, #11100000B
	LCALL INIT_LCD
	LCALL CLEAR_LCD
M0:
	MOV A,#'H'
	LCALL WRITE_TEXT
	MOV A,#'E'
	LCALL WRITE_TEXT
	MOV A,#'L'
	LCALL WRITE_TEXT
	MOV A,#'L'
	LCALL WRITE_TEXT
	MOV A,#'O'
	LCALL WRITE_TEXT
	MOV A,#' '
	LCALL WRITE_TEXT
	MOV A,#'W'
	LCALL WRITE_TEXT
	MOV A,#'O'
	LCALL WRITE_TEXT
	MOV A,#'R'
	LCALL WRITE_TEXT
	MOV A,#'L'
	LCALL WRITE_TEXT
	MOV A,#'D'
	LCALL WRITE_TEXT
	SJMP M0

INIT_LCD:
	CLR RS
	MOV INFO,#38h
	SETB EN
	CLR EN
	LCALL WAIT_LCD
	CLR RS
	MOV INFO,#0Eh
	SETB EN
	CLR EN
	LCALL WAIT_LCD
	CLR RS
	MOV INFO,#06h
	SETB EN
	CLR EN
	LCALL WAIT_LCD
	RET
	
CLEAR_LCD:
	CLR RS
	MOV INFO,#01h
	SETB EN
	CLR EN
	LCALL WAIT_LCD
	RET

WRITE_TEXT:
	SETB RS
	MOV INFO,A
	SETB EN
	CLR EN
	LCALL WAIT_LCD
	RET
	
END
	
